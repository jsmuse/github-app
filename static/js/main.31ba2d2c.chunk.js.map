{"version":3,"sources":["pages/UserProfile/UserProfile.module.scss","components/UserCard/UserCard.module.scss","pages/UsersList/UsersList.module.scss","App.module.scss","components/UserCard/UserCard.js","pages/UsersList/UsersList.js","pages/UserProfile/UserProfile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserCard","props","className","styles","card","Grid","container","spacing","item","xs","justify","alignItems","to","Avatar","avatar","alt","name","src","imageLink","link","button","href","target","UsersList","useState","error","setError","isLoaded","setIsLoaded","items","setItems","pagination","setPagination","useEffect","fetch","method","then","res","json","result","console","log","message","map","login","avatar_url","html_url","key","Pagination","size","count","page","onChange","event","CircularProgress","disableShrink","UserProfile","user","useParams","userInfo","setUserInfo","direction","about","company","location","date","Date","created_at","toLocaleDateString","App","app","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.31ba2d2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"UserProfile_card__3FSOp\",\"avatar\":\"UserProfile_avatar__15-eE\",\"name\":\"UserProfile_name__26iYV\",\"about\":\"UserProfile_about__vl-V2\",\"date\":\"UserProfile_date__1yw5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"UserCard_card__1yfQM\",\"avatar\":\"UserCard_avatar__22xhF\",\"link\":\"UserCard_link__1TNS1\",\"button\":\"UserCard_button__32JLU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"UsersList_pagination__JR8gp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\"};","import React from \"react\";\nimport { Avatar, Grid } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./UserCard.module.scss\";\n\nexport default function UserCard(props) {\n  return (\n    <div className={styles.card}>\n      <Grid container spacing={4}>\n        <Grid container item xs={2} justify=\"flex-end\" alignItems=\"center\">\n          <Link to=\"user\">\n            <Avatar\n              className={styles.avatar}\n              alt={props.name}\n              src={props.imageLink}\n            />\n          </Link>\n        </Grid>\n        <Grid container item xs={8} alignItems=\"center\">\n          <Link to={props.name} className={styles.link}>\n            {props.name}\n          </Link>\n        </Grid>\n        <Grid container item xs={2} alignItems=\"center\">\n          <a className={styles.button} href={props.link} target=\"_blank\">\n            Кнопка\n          </a>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Pagination } from \"@material-ui/lab\";\nimport { CircularProgress, Grid } from \"@material-ui/core\";\n\nimport UserCard from \"../../components/UserCard/UserCard\";\nimport styles from \"./UsersList.module.scss\";\n\nexport default function UsersList() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [pagination, setPagination] = useState(1);\n\n  useEffect(() => {\n    fetch(`https://api.github.com/users?since=${pagination}00`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result);\n        },\n        (error) => {\n          console.log(error);\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, [pagination]);\n\n  const handleChange = (event, page) => {\n    setPagination(page);\n  };\n\n  if (error) {\n    return <div>Ошибка: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <CircularProgress disableShrink />;\n  } else {\n    return (\n      <>\n        <Grid container item xs={10}>\n          {items.map(({ login, avatar_url, html_url }) => (\n            <UserCard\n              key={login}\n              name={login}\n              imageLink={avatar_url}\n              link={html_url}\n            />\n          ))}\n        </Grid>\n\n        <Pagination\n          size=\"large\"\n          count={4}\n          page={pagination}\n          onChange={handleChange}\n          className={styles.pagination}\n        />\n      </>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Avatar, Grid, CircularProgress } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\n\nimport styles from \"./UserProfile.module.scss\";\n\nexport default function UserProfile() {\n  const { user } = useParams();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [userInfo, setUserInfo] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://api.github.com/users/${user}`, { method: \"GET\" })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setUserInfo(result);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, [user]);\n\n  if (error) {\n    return <div>Ошибка: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <CircularProgress disableShrink />;\n  } else {\n    return (\n      <Grid container item xs={10} className={styles.card}>\n        <Avatar\n          className={styles.avatar}\n          alt={userInfo.name}\n          src={userInfo.avatar_url}\n        />\n        <Grid container item xs direction=\"column\" alignItems=\"flex-start\">\n          <p className={styles.name}>{userInfo.name}</p>\n          <p className={styles.about}>\n            {userInfo.company} {userInfo.location}\n          </p>\n          <p className={styles.date}>\n            From{\" \"}\n            {userInfo &&\n              new Date(userInfo.created_at).toLocaleDateString(\"en-US\")}\n          </p>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport UsersList from \"./pages/UsersList/UsersList\";\nimport UserProfile from \"./pages/UserProfile/UserProfile\";\n\nimport styles from \"./App.module.scss\";\n\nexport default function App() {\n  return (\n    <div className={styles.app}>\n      <Grid item container justify=\"center\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <UsersList />\n            </Route>\n            <Route path=\"/:user\">\n              <UserProfile />\n            </Route>\n          </Switch>\n        </Router>\n      </Grid>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}